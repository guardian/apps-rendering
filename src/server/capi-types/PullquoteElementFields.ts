/* tslint:disable */
/* eslint-disable */
/*
 * Autogenerated by @creditkarma/thrift-typescript v3.7.6
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
*/
import * as thrift from "@creditkarma/thrift-server-core";
export interface IPullquoteElementFieldsArgs {
    html?: string;
    attribution?: string;
    role?: string;
}
export class PullquoteElementFields {
    public html?: string;
    public attribution?: string;
    public role?: string;
    constructor(args?: IPullquoteElementFieldsArgs) {
        if (args != null && args.html != null) {
            this.html = args.html;
        }
        if (args != null && args.attribution != null) {
            this.attribution = args.attribution;
        }
        if (args != null && args.role != null) {
            this.role = args.role;
        }
    }
    public write(output: thrift.TProtocol): void {
        output.writeStructBegin("PullquoteElementFields");
        if (this.html != null) {
            output.writeFieldBegin("html", thrift.TType.STRING, 1);
            output.writeString(this.html);
            output.writeFieldEnd();
        }
        if (this.attribution != null) {
            output.writeFieldBegin("attribution", thrift.TType.STRING, 2);
            output.writeString(this.attribution);
            output.writeFieldEnd();
        }
        if (this.role != null) {
            output.writeFieldBegin("role", thrift.TType.STRING, 3);
            output.writeString(this.role);
            output.writeFieldEnd();
        }
        output.writeFieldStop();
        output.writeStructEnd();
        return;
    }
    public static read(input: thrift.TProtocol): PullquoteElementFields {
        input.readStructBegin();
        let _args: any = {};
        while (true) {
            const ret: thrift.IThriftField = input.readFieldBegin();
            const fieldType: thrift.TType = ret.fieldType;
            const fieldId: number = ret.fieldId;
            if (fieldType === thrift.TType.STOP) {
                break;
            }
            switch (fieldId) {
                case 1:
                    if (fieldType === thrift.TType.STRING) {
                        const value_1: string = input.readString();
                        _args.html = value_1;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                case 2:
                    if (fieldType === thrift.TType.STRING) {
                        const value_2: string = input.readString();
                        _args.attribution = value_2;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                case 3:
                    if (fieldType === thrift.TType.STRING) {
                        const value_3: string = input.readString();
                        _args.role = value_3;
                    }
                    else {
                        input.skip(fieldType);
                    }
                    break;
                default: {
                    input.skip(fieldType);
                }
            }
            input.readFieldEnd();
        }
        input.readStructEnd();
        return new PullquoteElementFields(_args);
    }
}
